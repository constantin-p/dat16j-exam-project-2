# Step 1 (create the db)
DROP DATABASE IF EXISTS `demodb`;
CREATE DATABASE demodb;

# Step 2 (select the db)
USE demodb;


# PERMISSION SYSTEM
# Step 3 (create the accounttypes table)
DROP TABLE IF EXISTS `accounttypes`;
CREATE TABLE accounttypes (
  id INT NOT NULL AUTO_INCREMENT,

  name VARCHAR(25) NOT NULL UNIQUE,

  PRIMARY KEY (id)
);

# Step 4 (create the accesstypes table)
DROP TABLE IF EXISTS `accesstypes`;
CREATE TABLE accesstypes (
  id INT NOT NULL AUTO_INCREMENT,

  name VARCHAR(25) NOT NULL UNIQUE,

  PRIMARY KEY (id)
);

# Step 5 (create the accounttype_accesstype table)
DROP TABLE IF EXISTS `accounttype_accesstype`;
CREATE TABLE accounttype_accesstype (
  id INT NOT NULL AUTO_INCREMENT,

  accounttype_id INT NOT NULL,
  accesstype_id INT NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (accounttype_id) REFERENCES accounttypes(id),
  FOREIGN KEY (accesstype_id) REFERENCES accesstypes(id)
);

# Step 6 (populate the accesstypes table with the hardcoded options)
INSERT INTO `accesstypes` (`name`)
VALUES
	('accounts'),
	('account_types'),
	('cleaning'),
	('clients'),
	('fleet'),
	('orders'),
	('payments'),
	('refunds'),
	('repairs'),
	('service');

# END PERMISSION SYSTEM


# Step 7 (create the accounts table)
DROP TABLE IF EXISTS `accounts`;
CREATE TABLE accounts (
  id INT NOT NULL AUTO_INCREMENT,

  username VARCHAR(25) NOT NULL UNIQUE,
  hash CHAR(166) NOT NULL,

  accounttype_id INT NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (accounttype_id) REFERENCES accounttypes(id)
);

# Step 8 (create the clients table)
DROP TABLE IF EXISTS `clients`;
CREATE TABLE clients (
   id INT NOT NULL AUTO_INCREMENT,

   first_name VARCHAR(25) NOT NULL,
   last_name VARCHAR(25) NOT NULL,
   email VARCHAR(25) NOT NULL UNIQUE,

   date_of_birth VARCHAR(25) NOT NULL,

   PRIMARY KEY (id)
);

# Step 9 (create the motorhomes table)
DROP TABLE IF EXISTS `motorhomes`;
CREATE TABLE motorhomes (
    id INT NOT NULL AUTO_INCREMENT,

    model VARCHAR(25) NOT NULL,
    brand VARCHAR(25) NOT NULL,

    capacity INT NOT NULL,

    PRIMARY KEY (id)
);